Looking for files
   Found phylib.c
   Found phylib.h
   Found makefile
Compiling
   clang -std=c99 -Wall -pedantic -c phylib.c -fPIC -o phylib.o 1>> compile.out 2>> compile.err
   clang -std=c99 -Wall -pedantic  phylib.o -shared -o libphylib.so 1>> compile.out 2>> compile.err
Looking for targets
   Found libphylib.so
   Compilation succeeded

Beginning testing
=================

Test case 01 (phylib_new_still_ball 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test01.c -lm -L. -lphylib -o test01 1>> compile.out 2>> compile.err
   Found test01
   Compilation succeeded
Running test01
   Pass!

Test case 02 (phylib_new_rolling_ball 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test02.c -lm -L. -lphylib -o test02 1>> compile.out 2>> compile.err
   Found test02
   Compilation succeeded
Running test02
   Pass!

Test case 03 (phylib_new_hole 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test03.c -lm -L. -lphylib -o test03 1>> compile.out 2>> compile.err
   Found test03
   Compilation succeeded
Running test03
   Pass!

Test case 04 (phylib_new_hcushion 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test04.c -lm -L. -lphylib -o test04 1>> compile.out 2>> compile.err
   Found test04
   Compilation succeeded
Running test04
   Pass!

Test case 05 (phylib_new_vcushion 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test05.c -lm -L. -lphylib -o test05 1>> compile.out 2>> compile.err
   Found test05
   Compilation succeeded
Running test05
   Pass!

Test case 06 (phylib_new_table 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test06.c -lm -L. -lphylib -o test06 1>> compile.out 2>> compile.err
   Found test06
   Compilation succeeded
Running test06
   Run output prints (which it shouldn't):
   table->time != 0.000000

   Fail!

Test case 07 (phylib_new_table 2)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test07.c -lm -L. -lphylib -o test07 1>> compile.out 2>> compile.err
   Found test07
   Compilation succeeded
Running test07
   Run output prints (which it shouldn't):
   table->time != 0.000000

   Fail!

Test case 08 (phylib_copy_object 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test08.c -lm -L. -lphylib -o test08 1>> compile.out 2>> compile.err
   Found test08
   Compilation succeeded
Running test08
   Pass!

Test case 09 (phylib_copy_table 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test09.c -lm -L. -lphylib -o test09 1>> compile.out 2>> compile.err
   Found test09
   Compilation succeeded
Running test09
   Pass!

Test case 10 (phylib_copy_table 2)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test10.c -lm -L. -lphylib -o test10 1>> compile.out 2>> compile.err
   Found test10
   Compilation succeeded
Running test10
   Pass!

Test case 11 (add_object 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test11.c -lm -L. -lphylib -o test11 1>> compile.out 2>> compile.err
   Found test11
   Compilation succeeded
Running test11
   Pass!

Test case 12 (free_table 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test12.c -lm -L. -lphylib -o test12 1>> compile.out 2>> compile.err
   Found test12
   Compilation succeeded
Running test12
   Pass!

Test case 13 (sub 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test13.c -lm -L. -lphylib -o test13 1>> compile.out 2>> compile.err
   Found test13
   Compilation succeeded
Running test13
   Pass!

Test case 14 (length 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test14.c -lm -L. -lphylib -o test14 1>> compile.out 2>> compile.err
   Found test14
   Compilation succeeded
Running test14
   Pass!

Test case 15 (dot_product 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test15.c -lm -L. -lphylib -o test15 1>> compile.out 2>> compile.err
   Found test15
   Compilation succeeded
Running test15
   Pass!

Test case 16 (distance 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test16.c -lm -L. -lphylib -o test16 1>> compile.out 2>> compile.err
   Found test16
   Compilation succeeded
Running test16
   Run output prints (which it shouldn't):
   d2 != 646.500000

   Fail!

Test case 17 (roll 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test17.c -lm -L. -lphylib -o test17 1>> compile.out 2>> compile.err
   Found test17
   Compilation succeeded
Running test17
   Pass!

Test case 18 (roll 2)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test18.c -lm -L. -lphylib -o test18 1>> compile.out 2>> compile.err
   Found test18
   Compilation succeeded
Running test18
   Pass!

Test case 19 (stopped 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test19.c -lm -L. -lphylib -o test19 1>> compile.out 2>> compile.err
   Found test19
   Compilation succeeded
Running test19
   Pass!

Test case 20 (bounce 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test20.c -lm -L. -lphylib -o test20 1>> compile.out 2>> compile.err
   Found test20
   Compilation succeeded
Running test20
   Run output prints (which it shouldn't):
   obj1->obj.rolling_ball.vel.y != 1000.000000

Valgrind found errors:
  ==3068== Memcheck, a memory error detector
  ==3068== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
  ==3068== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
  ==3068== Command: ./test20
  ==3068== 
  ==3068== 
  ==3068== HEAP SUMMARY:
  ==3068==     in use at exit: 128 bytes in 2 blocks
  ==3068==   total heap usage: 3 allocs, 1 frees, 4,224 bytes allocated
  ==3068== 
  ==3068== 64 bytes in 1 blocks are definitely lost in loss record 1 of 2
  ==3068==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
  ==3068==    by 0x493F2B3: phylib_new_rolling_ball (in /home/socs/workdir/Grading/Repos/A1/aclaregr/libphylib.so)
  ==3068==    by 0x1092B6: main (in /home/socs/workdir/Grading/Repos/A1/aclaregr/test20)
  ==3068== 
  ==3068== 64 bytes in 1 blocks are definitely lost in loss record 2 of 2
  ==3068==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
  ==3068==    by 0x493F3C6: phylib_new_hcushion (in /home/socs/workdir/Grading/Repos/A1/aclaregr/libphylib.so)
  ==3068==    by 0x1092C2: main (in /home/socs/workdir/Grading/Repos/A1/aclaregr/test20)
  ==3068== 
  ==3068== LEAK SUMMARY:
  ==3068==    definitely lost: 128 bytes in 2 blocks
  ==3068==    indirectly lost: 0 bytes in 0 blocks
  ==3068==      possibly lost: 0 bytes in 0 blocks
  ==3068==    still reachable: 0 bytes in 0 blocks
  ==3068==         suppressed: 0 bytes in 0 blocks
  ==3068== 
  ==3068== For lists of detected and suppressed errors, rerun with: -s
  ==3068== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
   Fail!

Test case 21 (bounce 2)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test21.c -lm -L. -lphylib -o test21 1>> compile.out 2>> compile.err
   Found test21
   Compilation succeeded
Running test21
   Run output prints (which it shouldn't):
   obj1->obj.rolling_ball.vel.x != -1000.000000

Valgrind found errors:
  ==3075== Memcheck, a memory error detector
  ==3075== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
  ==3075== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
  ==3075== Command: ./test21
  ==3075== 
  ==3075== 
  ==3075== HEAP SUMMARY:
  ==3075==     in use at exit: 128 bytes in 2 blocks
  ==3075==   total heap usage: 3 allocs, 1 frees, 4,224 bytes allocated
  ==3075== 
  ==3075== 64 bytes in 1 blocks are definitely lost in loss record 1 of 2
  ==3075==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
  ==3075==    by 0x493F2B3: phylib_new_rolling_ball (in /home/socs/workdir/Grading/Repos/A1/aclaregr/libphylib.so)
  ==3075==    by 0x1092B6: main (in /home/socs/workdir/Grading/Repos/A1/aclaregr/test21)
  ==3075== 
  ==3075== 64 bytes in 1 blocks are definitely lost in loss record 2 of 2
  ==3075==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
  ==3075==    by 0x493F426: phylib_new_vcushion (in /home/socs/workdir/Grading/Repos/A1/aclaregr/libphylib.so)
  ==3075==    by 0x1092C2: main (in /home/socs/workdir/Grading/Repos/A1/aclaregr/test21)
  ==3075== 
  ==3075== LEAK SUMMARY:
  ==3075==    definitely lost: 128 bytes in 2 blocks
  ==3075==    indirectly lost: 0 bytes in 0 blocks
  ==3075==      possibly lost: 0 bytes in 0 blocks
  ==3075==    still reachable: 0 bytes in 0 blocks
  ==3075==         suppressed: 0 bytes in 0 blocks
  ==3075== 
  ==3075== For lists of detected and suppressed errors, rerun with: -s
  ==3075== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
   Fail!

Test case 22 (bounce 3)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test22.c -lm -L. -lphylib -o test22 1>> compile.out 2>> compile.err
   Found test22
   Compilation succeeded
Running test22
   Pass!

Test case 23 (bounce 4)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test23.c -lm -L. -lphylib -o test23 1>> compile.out 2>> compile.err
   Found test23
   Compilation succeeded
Running test23
   Pass!

Test case 24 (bounce 5)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test24.c -lm -L. -lphylib -o test24 1>> compile.out 2>> compile.err
   Found test24
   Compilation succeeded
Running test24
   Pass!

Test case 25 (rolling 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test25.c -lm -L. -lphylib -o test25 1>> compile.out 2>> compile.err
   Found test25
   Compilation succeeded
Running test25
   Pass!

Test case 26 (rolling 2)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test26.c -lm -L. -lphylib -o test26 1>> compile.out 2>> compile.err
   Found test26
   Compilation succeeded
Running test26
   Pass!

Test case 27 (rolling 3)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test27.c -lm -L. -lphylib -o test27 1>> compile.out 2>> compile.err
   Found test27
   Compilation succeeded
Running test27
   Pass!

Test case 28 (rolling 4)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test28.c -lm -L. -lphylib -o test28 1>> compile.out 2>> compile.err
   Found test28
   Compilation succeeded
Running test28
   Pass!

Test case 29 (segment 1)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test29.c -lm -L. -lphylib -o test29 1>> compile.out 2>> compile.err
   Found test29
   Compilation succeeded
Running test29
   Run output prints (which it shouldn't):
   table->time != 0.000000

Valgrind found errors:
  ==3131== Memcheck, a memory error detector
  ==3131== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
  ==3131== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
  ==3131== Command: ./test29
  ==3131== 
  ==3131== 
  ==3131== HEAP SUMMARY:
  ==3131==     in use at exit: 984 bytes in 13 blocks
  ==3131==   total heap usage: 14 allocs, 1 frees, 5,080 bytes allocated
  ==3131== 
  ==3131== 984 (216 direct, 768 indirect) bytes in 1 blocks are definitely lost in loss record 13 of 13
  ==3131==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
  ==3131==    by 0x493F484: phylib_new_table (in /home/socs/workdir/Grading/Repos/A1/aclaregr/libphylib.so)
  ==3131==    by 0x10928A: main (in /home/socs/workdir/Grading/Repos/A1/aclaregr/test29)
  ==3131== 
  ==3131== LEAK SUMMARY:
  ==3131==    definitely lost: 216 bytes in 1 blocks
  ==3131==    indirectly lost: 768 bytes in 12 blocks
  ==3131==      possibly lost: 0 bytes in 0 blocks
  ==3131==    still reachable: 0 bytes in 0 blocks
  ==3131==         suppressed: 0 bytes in 0 blocks
  ==3131== 
  ==3131== For lists of detected and suppressed errors, rerun with: -s
  ==3131== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
   Fail!

Test case 30 (segment 2)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test30.c -lm -L. -lphylib -o test30 1>> compile.out 2>> compile.err
   Found test30
   Compilation succeeded
Running test30
   Pass!

Test case 31 (segment 3)
Compiling
   clang -std=c99 -Wall -pedantic /home/socs/workdir/Grading/TestSuites/A1/test31.c -lm -L. -lphylib -o test31 1>> compile.out 2>> compile.err
   Found test31
   Compilation succeeded
Running test31
   Run output prints (which it shouldn't):
   table->time != 3.967700

Valgrind found errors:
  ==3145== Memcheck, a memory error detector
  ==3145== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
  ==3145== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
  ==3145== Command: ./test31
  ==3145== 
  ==3145== 
  ==3145== HEAP SUMMARY:
  ==3145==     in use at exit: 920 bytes in 12 blocks
  ==3145==   total heap usage: 127,294 allocs, 127,282 frees, 8,151,304 bytes allocated
  ==3145== 
  ==3145== 920 (216 direct, 704 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3
  ==3145==    at 0x48407B4: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
  ==3145==    by 0x493F6E5: phylib_copy_table (in /home/socs/workdir/Grading/Repos/A1/aclaregr/libphylib.so)
  ==3145==    by 0x49402AE: phylib_segment (in /home/socs/workdir/Grading/Repos/A1/aclaregr/libphylib.so)
  ==3145==    by 0x109371: main (in /home/socs/workdir/Grading/Repos/A1/aclaregr/test31)
  ==3145== 
  ==3145== LEAK SUMMARY:
  ==3145==    definitely lost: 216 bytes in 1 blocks
  ==3145==    indirectly lost: 704 bytes in 11 blocks
  ==3145==      possibly lost: 0 bytes in 0 blocks
  ==3145==    still reachable: 0 bytes in 0 blocks
  ==3145==         suppressed: 0 bytes in 0 blocks
  ==3145== 
  ==3145== For lists of detected and suppressed errors, rerun with: -s
  ==3145== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
   Fail!

Found makefile
Correct options
Comments
Indentation levels are: ['', '    ', '        ', '            ', '                ', '                    ', '                        ', '                            ', '                                ']
Code is indented
Assignment submitted by Andrew Clare-Green <aclaregr@linux-08.socs.uoguelph.ca>
   at: Thu Jan 25 14:26:10 2024
   0 hours late
   0 points penalty
